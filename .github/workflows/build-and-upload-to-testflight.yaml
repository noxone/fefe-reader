name: Build and archive

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version Number'
        required: true
        default: ''
  push:
    branches: 
      - testfligth/*
      - test-flight/*

env:
  project-name: FefeReader
  scheme-name: FefeReader
  bundle-id: org.olafneumann.FefeReader
  development-team: NBA2M3HYSW
  provisioning-profile-specifier: Distribute FefeReader
  provisioning-profile: 2d117a78-38d3-4de5-b92d-661132c8e97d
  
jobs:
  build:
    name: Build and upload iOS app
    runs-on: macos-15
    # https://github.com/actions/runner-images/blob/main/README.md#available-images
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select XCode 16.1
        run: sudo xcode-select -switch /Applications/Xcode_16.1.app
        # https://github.com/actions/runner-images/blob/main/images/macos/macos-15-Readme.md#xcode
        
      - name: Extract version from branch name
        id: extract_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then

            echo "version: ${{ github.event.inputs.version }}"
            version="${{ github.event.inputs.version }}"

          else

            branch_name="${GITHUB_REF#refs/heads/}"
            echo "Branch name: $branch_name"

            if [[ "$branch_name" =~ test-?flight\/([0-9]+\.[0-9]+)$ ]]; then
              version="${BASH_REMATCH[1]}"
              echo "Extracted version: $version"
            else
              echo "Branch name does not match the expected pattern: test-?flight\/([0-9]+\.[0-9]+)$"
              echo "No version extracted."
              exit 1
            fi

          fi

          echo "::set-output name=version::$version"

      - name: Import certificates
        uses: Apple-Actions/import-codesign-certs@v5
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_FILE_BASE64 }}
          p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}

      - name: Download provisioning profiles
        id: provisioning
        uses: Apple-Actions/download-provisioning-profiles@v3
        with:
          bundle-id: ${{ env.bundle-id }}
          profile-type: 'IOS_APP_STORE'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Print provisioning profiles
        run: |
          echo "${{ steps.provisioning.outputs.profiles }}"

      - name: Generate Build Number
        id: buildnumber
        uses: onyxmueller/build-tag-number@v1
        with:
          token: ${{ secrets.github_token }}

      - name: Clean and build for archive project
        run: |
          xcrun xcodebuild -project ${{ env.project-name }}.xcodeproj \
                      -scheme ${{ env.scheme-name }} \
                      -sdk iphoneos \
                      -configuration Release \
                      -allowProvisioningUpdates \
                      -showBuildTimingSummary \
                      -derivedDataPath ".build/DerivedData" \
                      -archivePath ".build/Archives/${{ env.scheme-name }}.xcarchive" \
                      -resultBundlePath ".build/Artifacts/${{ env.scheme-name }}.xcresult" \
                      CODE_SIGN_STYLE="Manual" \
                      CODE_SIGN_IDENTITY="iPhone Distribution" \
                      DEVELOPMENT_TEAM="${{env.development-team}}" \
                      PROVISIONING_PROFILE_SPECIFIER="${{env.provisioning-profile-specifier}}" \
                      PROVISIONING_PROFILE="${{env.provisioning-profile}}" \
                      CURRENT_PROJECT_VERSION=${{ steps.buildnumber.outputs.build_number }} \
                      MARKETING_VERSION=${{ steps.extract_version.outputs.version }} \
                      clean archive

      - name: Export archive
        run: |
          xcrun xcodebuild \
                      -exportArchive \
                      -exportOptionsPlist "BuildConfiguration/ExportOptions.plist" \
                      -archivePath ".build/Archives/${{ env.scheme-name }}.xcarchive" \
                      -exportPath ".build/Artifacts/${{env.scheme-name}}.ipa" \

      - name: Create ipa.zip
        run: |
          zip .build/ipa.zip .build/Artifacts/${{env.scheme-name}}.ipa/*

      - name: Upload ipa.zip
        uses: actions/upload-artifact@v4
        with:
          name: IPA
          path: .build/ipa.zip
    
      - name: Upload to Testflight
        uses: Apple-Actions/upload-testflight-build@master
        with:
          app-path: .build/Artifacts/${{ env.scheme-name }}.ipa/${{ env.scheme-name }}.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

# https://stackoverflow.com/questions/60963759/use-github-actions-to-create-a-tag-but-not-a-release
